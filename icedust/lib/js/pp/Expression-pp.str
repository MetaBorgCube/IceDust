module js/pp/Expression-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libstratego-sglr
  js/signatures/Expression-sig


imports
  js/signatures/Common-sig
  js/signatures/Statement-sig


imports
  js/pp/Common-pp
  js/pp/Statement-pp


strategies
  prettyprint-example =
    prettyprint-spoofaxJS

  prettyprint-spoofaxJS =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-spoofaxJS-start-symbols

  prettyprint-spoofaxJS-start-symbols =
    fail


strategies
  prettyprint-spoofaxJS =
    prettyprint-spoofaxJS-CondMid

  prettyprint-spoofaxJS =
    prettyprint-spoofaxJS-ObjectProperty

  prettyprint-spoofaxJS =
    prettyprint-spoofaxJS-Expression

  prettyprint-spoofaxJS =
    prettyprint-spoofaxJS-LambdaParameters

  prettyprint-spoofaxJS(|sort):
    t -> <prettyprint-spoofaxJS-CondMid>
    where <?"CondMid"> sort

  prettyprint-spoofaxJS(|sort):
    t -> <prettyprint-spoofaxJS-ObjectProperty>
    where <?"ObjectProperty"> sort

  prettyprint-spoofaxJS(|sort):
    t -> <prettyprint-spoofaxJS-Expression>
    where <?"Expression"> sort

  prettyprint-spoofaxJS(|sort):
    t -> <prettyprint-spoofaxJS-LambdaParameters>
    where <?"LambdaParameters"> sort

  prettyprint-spoofaxJS-Expression :
    Parenthetical(t1__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [ S(" ( ")
                               , t1__'
                               , S(" ) ")
                               ]
                             )
                           ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  prettyprint-spoofaxJS-Expression :
    Property(t1__, t2__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [t1__', S("."), t2__']
                              )
                            ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-ID) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Property(_, _)

  spoofaxJS-get-indent :
    (t@Property(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Property(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Property(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Call(t1__, t2__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ t1__'
                            , S("(")
                            , t2__'
                            , S(")")
                            ]
                          )
                        ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-H-list(prettyprint-spoofaxJS-Expression|",")
                   <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Call(_, _)

  spoofaxJS-get-indent :
    (t@Call(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Call(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ","
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Call(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    IntegerLiteral(t1__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [t1__']
                              )
                            ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-INT) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-Expression =
    ?IntegerLiteral(_)

  spoofaxJS-get-indent :
    (t@IntegerLiteral(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@IntegerLiteral(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@IntegerLiteral(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    FloatLiteral(t1__) -> [ H(
                              [SOpt(HS(), "0")]
                            , [t1__']
                            )
                          ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-FLOAT) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-Expression =
    ?FloatLiteral(_)

  spoofaxJS-get-indent :
    (t@FloatLiteral(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@FloatLiteral(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@FloatLiteral(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  is-spoofaxJS-Expression =
    ?True()

  spoofaxJS-get-indent :
    (t@True(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@True(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@True(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  is-spoofaxJS-Expression =
    ?False()

  spoofaxJS-get-indent :
    (t@False(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@False(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@False(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Null() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("null")]
                )
              ]

  is-spoofaxJS-Expression =
    ?Null()

  spoofaxJS-get-indent :
    (t@Null(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Null(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Null(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Undefined() -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("undefined")]
                     )
                   ]

  is-spoofaxJS-Expression =
    ?Undefined()

  spoofaxJS-get-indent :
    (t@Undefined(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Undefined(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Undefined(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Identifier(t1__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [t1__']
                          )
                        ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-ID) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-Expression =
    ?Identifier(_)

  spoofaxJS-get-indent :
    (t@Identifier(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Identifier(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Identifier(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    String(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , [t1__']
                      )
                    ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-STRING) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-Expression =
    ?String(_)

  spoofaxJS-get-indent :
    (t@String(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@String(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@String(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    This() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("this")]
                )
              ]

  is-spoofaxJS-Expression =
    ?This()

  spoofaxJS-get-indent :
    (t@This(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@This(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@This(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Addition(t1__, t2__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [t1__', S(" + "), t2__']
                              )
                            ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Addition(_, _)

  spoofaxJS-get-indent :
    (t@Addition(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Addition(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Addition(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Substraction(t1__, t2__) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [t1__', S(" - "), t2__']
                                  )
                                ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Substraction(_, _)

  spoofaxJS-get-indent :
    (t@Substraction(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Substraction(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Substraction(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Multiplication(t1__, t2__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [t1__', S(" * "), t2__']
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Multiplication(_, _)

  spoofaxJS-get-indent :
    (t@Multiplication(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Multiplication(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Multiplication(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Division(t1__, t2__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [t1__', S(" / "), t2__']
                              )
                            ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Division(_, _)

  spoofaxJS-get-indent :
    (t@Division(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Division(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Division(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Greater(t1__, t2__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [t1__', S(" > "), t2__']
                             )
                           ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Greater(_, _)

  spoofaxJS-get-indent :
    (t@Greater(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Greater(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Greater(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Lower(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [t1__', S(" < "), t2__']
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Lower(_, _)

  spoofaxJS-get-indent :
    (t@Lower(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Lower(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Lower(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    GreaterEquals(t1__, t2__) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [t1__', S(" >= "), t2__']
                                   )
                                 ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?GreaterEquals(_, _)

  spoofaxJS-get-indent :
    (t@GreaterEquals(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@GreaterEquals(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@GreaterEquals(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    LowerEquals(t1__, t2__) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [t1__', S(" <= "), t2__']
                                 )
                               ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?LowerEquals(_, _)

  spoofaxJS-get-indent :
    (t@LowerEquals(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@LowerEquals(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@LowerEquals(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Equals(t1__, t2__) -> [ H(
                              [SOpt(HS(), "0")]
                            , [t1__', S(" == "), t2__']
                            )
                          ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Equals(_, _)

  spoofaxJS-get-indent :
    (t@Equals(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Equals(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Equals(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    EqualsStrict(t1__, t2__) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [t1__', S(" === "), t2__']
                                  )
                                ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?EqualsStrict(_, _)

  spoofaxJS-get-indent :
    (t@EqualsStrict(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@EqualsStrict(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@EqualsStrict(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    NotEquals(t1__, t2__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [t1__', S(" != "), t2__']
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?NotEquals(_, _)

  spoofaxJS-get-indent :
    (t@NotEquals(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@NotEquals(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@NotEquals(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    NotEqualsStrict(t1__, t2__) -> [ H(
                                       [SOpt(HS(), "0")]
                                     , [t1__', S(" !== "), t2__']
                                     )
                                   ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?NotEqualsStrict(_, _)

  spoofaxJS-get-indent :
    (t@NotEqualsStrict(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@NotEqualsStrict(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@NotEqualsStrict(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    And(t1__, t2__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [t1__', S(" && "), t2__']
                         )
                       ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?And(_, _)

  spoofaxJS-get-indent :
    (t@And(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@And(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@And(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Or(t1__, t2__) -> [ H(
                          [SOpt(HS(), "0")]
                        , [t1__', S(" || "), t2__']
                        )
                      ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Or(_, _)

  spoofaxJS-get-indent :
    (t@Or(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Or(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Or(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    FunctionExpression(t1__, t2__, t3__) -> [ H(
                                                [SOpt(HS(), "0")]
                                              , [ S("function ")
                                                , t1__'
                                                , S("(")
                                                , t2__'
                                                , S(") {")
                                                ]
                                              )
                                            , t3__'
                                            , t4__'
                                            ]
    with t1__' := <pp-option(
                     pp-one-Z(prettyprint-spoofaxJS-ID) <+ pp-one-Z(prettyprint-completion-aux)
                   )> t1__
    with t2__' := <pp-H-list(prettyprint-spoofaxJS-ID|",")
                   <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-indent(|"8")> [ <pp-V-list(prettyprint-spoofaxJS-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                    ]
    with t4__' := <pp-indent(|"4")> [S("}")]

  is-spoofaxJS-Expression =
    ?FunctionExpression(_, _, _)

  spoofaxJS-get-indent :
    ( t@FunctionExpression(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := "        "
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    ( t@FunctionExpression(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ","
           case ?3 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    ( t@FunctionExpression(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := ""
           case ?3 :
             ws := "\n        "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Negate(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("- "), t1__']
                      )
                    ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-Expression =
    ?Negate(_)

  spoofaxJS-get-indent :
    (t@Negate(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Negate(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Negate(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Cond(t1__, t2__, t3__) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ t1__'
                                  , S(" ")
                                  , t2__'
                                  , S(" ")
                                  , t3__'
                                  ]
                                )
                              ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-CondMid) <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t3__

  is-spoofaxJS-Expression =
    ?Cond(_, _, _)

  spoofaxJS-get-indent :
    ( t@Cond(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    ( t@Cond(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    ( t@Cond(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-CondMid :
    CondMid(t1__) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ S("? ")
                         , t1__'
                         , S(" :")
                         ]
                       )
                     ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-CondMid =
    ?CondMid(_)

  spoofaxJS-get-indent :
    (t@CondMid(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"CondMid"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@CondMid(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"CondMid"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@CondMid(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"CondMid"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    ObjectLiteral(t1__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("{")]
                             )
                           , t1__'
                           , H(
                               [SOpt(HS(), "0")]
                             , [S("}")]
                             )
                           ]
    with t1__' := <pp-indent(|"2")> [ <pp-V-list(prettyprint-spoofaxJS-ObjectProperty|"0", ",")
                                       <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                    ]

  is-spoofaxJS-Expression =
    ?ObjectLiteral(_)

  spoofaxJS-get-indent :
    (t@ObjectLiteral(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := "  "
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@ObjectLiteral(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ",\n"
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@ObjectLiteral(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-ObjectProperty :
    PropertyFromVariable(t1__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [t1__']
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-ID) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-ObjectProperty =
    ?PropertyFromVariable(_)

  spoofaxJS-get-indent :
    (t@PropertyFromVariable(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"ObjectProperty"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@PropertyFromVariable(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"ObjectProperty"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@PropertyFromVariable(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"ObjectProperty"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-ObjectProperty :
    ObjectProperty(t1__, t2__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [t1__', S(" : "), t2__']
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-ObjectProperty =
    ?ObjectProperty(_, _)

  spoofaxJS-get-indent :
    (t@ObjectProperty(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"ObjectProperty"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@ObjectProperty(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"ObjectProperty"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@ObjectProperty(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"ObjectProperty"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    ArrayLiteral(t1__) -> [ H(
                              [SOpt(HS(), "0")]
                            , [ S("[")
                              , t1__'
                              , S("]")
                              ]
                            )
                          ]
    with t1__' := <pp-H-list(prettyprint-spoofaxJS-Expression|",")
                   <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-Expression =
    ?ArrayLiteral(_)

  spoofaxJS-get-indent :
    (t@ArrayLiteral(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@ArrayLiteral(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ","
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@ArrayLiteral(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    Lambda(t1__, t2__) -> [ H(
                              [SOpt(HS(), "0")]
                            , [t1__', S(" => "), t2__']
                            )
                          ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-LambdaParameters) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?Lambda(_, _)

  spoofaxJS-get-indent :
    (t@Lambda(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@Lambda(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@Lambda(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-Expression :
    LambdaBlock(t1__, t2__) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [t1__', S(" => "), t2__']
                                 )
                               ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-LambdaParameters) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-spoofaxJS-BlockStatement) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-spoofaxJS-Expression =
    ?LambdaBlock(_, _)

  spoofaxJS-get-indent :
    (t@LambdaBlock(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@LambdaBlock(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@LambdaBlock(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-LambdaParameters :
    LambdaParameters(t1__) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ S("(")
                                  , t1__'
                                  , S(")")
                                  ]
                                )
                              ]
    with t1__' := <pp-H-list(prettyprint-spoofaxJS-ID|",")
                   <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-LambdaParameters =
    ?LambdaParameters(_)

  spoofaxJS-get-indent :
    (t@LambdaParameters(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"LambdaParameters"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@LambdaParameters(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"LambdaParameters"> sort
    with switch !index
           case ?1 :
             separator := ","
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@LambdaParameters(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"LambdaParameters"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-spoofaxJS-LambdaParameters :
    SingleParameter(t1__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [t1__']
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-spoofaxJS-ID) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-spoofaxJS-LambdaParameters =
    ?SingleParameter(_)

  spoofaxJS-get-indent :
    (t@SingleParameter(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"LambdaParameters"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  spoofaxJS-get-separator :
    (t@SingleParameter(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"LambdaParameters"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  spoofaxJS-get-leading-ws :
    (t@SingleParameter(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"LambdaParameters"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  is-spoofaxJS-CondMid =
    fail

  is-spoofaxJS-ObjectProperty =
    fail

  is-spoofaxJS-Expression =
    fail

  is-spoofaxJS-LambdaParameters =
    fail

  prettyprint-spoofaxJS-CondMid :
    amb([h|hs]) -> <prettyprint-spoofaxJS-CondMid> h

  prettyprint-spoofaxJS-ObjectProperty :
    amb([h|hs]) -> <prettyprint-spoofaxJS-ObjectProperty> h

  prettyprint-spoofaxJS-Expression :
    amb([h|hs]) -> <prettyprint-spoofaxJS-Expression> h

  prettyprint-spoofaxJS-LambdaParameters :
    amb([h|hs]) -> <prettyprint-spoofaxJS-LambdaParameters> h

  prettyprint-spoofaxJS-INT :
    INT-Plhdr() -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("[[INT]]")]
                     )
                   ]

  is-spoofaxJS-INT =
    ?INT-Plhdr()

  prettyprint-spoofaxJS-FLOAT :
    FLOAT-Plhdr() -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("[[FLOAT]]")]
                       )
                     ]

  is-spoofaxJS-FLOAT =
    ?FLOAT-Plhdr()

  prettyprint-spoofaxJS-STRING :
    STRING-Plhdr() -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("[[STRING]]")]
                        )
                      ]

  is-spoofaxJS-STRING =
    ?STRING-Plhdr()

  prettyprint-spoofaxJS-Statement :
    Statement-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("[[Statement]]")]
                           )
                         ]

  is-spoofaxJS-Statement =
    ?Statement-Plhdr()

  prettyprint-spoofaxJS-CondMid :
    CondMid-Plhdr() -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("[[CondMid]]")]
                         )
                       ]

  is-spoofaxJS-CondMid =
    ?CondMid-Plhdr()

  prettyprint-spoofaxJS-ObjectProperty :
    ObjectProperty-Plhdr() -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("[[ObjectProperty]]")]
                                )
                              ]

  is-spoofaxJS-ObjectProperty =
    ?ObjectProperty-Plhdr()

  prettyprint-spoofaxJS-Expression :
    Expression-Plhdr() -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("[[Expression]]")]
                            )
                          ]

  is-spoofaxJS-Expression =
    ?Expression-Plhdr()

  prettyprint-spoofaxJS-BlockStatement :
    BlockStatement-Plhdr() -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("[[BlockStatement]]")]
                                )
                              ]

  is-spoofaxJS-BlockStatement =
    ?BlockStatement-Plhdr()

  prettyprint-spoofaxJS-LambdaParameters :
    LambdaParameters-Plhdr() -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("[[LambdaParameters]]")]
                                  )
                                ]

  is-spoofaxJS-LambdaParameters =
    ?LambdaParameters-Plhdr()

  prettyprint-spoofaxJS-ID :
    ID-Plhdr() -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("[[ID]]")]
                    )
                  ]

  is-spoofaxJS-ID =
    ?ID-Plhdr()

  prettyprint-spoofaxJS-INT :
    INT-Plhdr(_) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("[[INT]]")]
                      )
                    ]

  is-spoofaxJS-INT =
    ?INT-Plhdr(_)

  prettyprint-spoofaxJS-FLOAT :
    FLOAT-Plhdr(_) -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("[[FLOAT]]")]
                        )
                      ]

  is-spoofaxJS-FLOAT =
    ?FLOAT-Plhdr(_)

  prettyprint-spoofaxJS-STRING :
    STRING-Plhdr(_) -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("[[STRING]]")]
                         )
                       ]

  is-spoofaxJS-STRING =
    ?STRING-Plhdr(_)

  prettyprint-spoofaxJS-Statement :
    Statement-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("[[Statement]]")]
                            )
                          ]

  is-spoofaxJS-Statement =
    ?Statement-Plhdr(_)

  prettyprint-spoofaxJS-CondMid :
    CondMid-Plhdr(_) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("[[CondMid]]")]
                          )
                        ]

  is-spoofaxJS-CondMid =
    ?CondMid-Plhdr(_)

  prettyprint-spoofaxJS-ObjectProperty :
    ObjectProperty-Plhdr(_) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [S("[[ObjectProperty]]")]
                                 )
                               ]

  is-spoofaxJS-ObjectProperty =
    ?ObjectProperty-Plhdr(_)

  prettyprint-spoofaxJS-Expression :
    Expression-Plhdr(_) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("[[Expression]]")]
                             )
                           ]

  is-spoofaxJS-Expression =
    ?Expression-Plhdr(_)

  prettyprint-spoofaxJS-BlockStatement :
    BlockStatement-Plhdr(_) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [S("[[BlockStatement]]")]
                                 )
                               ]

  is-spoofaxJS-BlockStatement =
    ?BlockStatement-Plhdr(_)

  prettyprint-spoofaxJS-LambdaParameters :
    LambdaParameters-Plhdr(_) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("[[LambdaParameters]]")]
                                   )
                                 ]

  is-spoofaxJS-LambdaParameters =
    ?LambdaParameters-Plhdr(_)

  prettyprint-spoofaxJS-ID :
    ID-Plhdr(_) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("[[ID]]")]
                     )
                   ]

  is-spoofaxJS-ID =
    ?ID-Plhdr(_)

  prettyprint-spoofaxJS-Statement :
    Statement-Opt-Plhdr() -> [ H(
                                 []
                               , [S("")]
                               )
                             ]

  is-spoofaxJS-Statement =
    ?Statement-Opt-Plhdr()

  prettyprint-spoofaxJS-ObjectProperty :
    ObjectProperty-Opt-Plhdr() -> [ H(
                                      []
                                    , [S("")]
                                    )
                                  ]

  is-spoofaxJS-ObjectProperty =
    ?ObjectProperty-Opt-Plhdr()

  prettyprint-spoofaxJS-Expression :
    Expression-Opt-Plhdr() -> [ H(
                                  []
                                , [S("")]
                                )
                              ]

  is-spoofaxJS-Expression =
    ?Expression-Opt-Plhdr()

  prettyprint-spoofaxJS-ID :
    ID-Opt-Plhdr() -> [ H(
                          []
                        , [S("")]
                        )
                      ]

  is-spoofaxJS-ID =
    ?ID-Opt-Plhdr()