module js/pp/Statement-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libstratego-sglr
  js/signatures/Statement-sig


imports
  js/signatures/Common-sig
  js/signatures/Expression-sig
  js/signatures/Import-sig
  js/signatures/Export-sig
  js/signatures/Class-sig
  js/signatures/Assignment-sig


imports
  js/pp/Common-pp
  js/pp/Expression-pp
  js/pp/Import-pp
  js/pp/Export-pp
  js/pp/Class-pp
  js/pp/Assignment-pp


strategies
  prettyprint-example =
    prettyprint-javascript

  prettyprint-javascript =
    fail

  prettyprint-javascript(|sort) =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-javascript-start-symbols

  prettyprint-javascript-start-symbols =
    fail


strategies
  prettyprint-javascript =
    prettyprint-javascript-BlockStatement

  prettyprint-javascript =
    prettyprint-javascript-Statement

  prettyprint-javascript =
    prettyprint-javascript-InitializeAssignment

  prettyprint-javascript =
    prettyprint-javascript-Declaration

  prettyprint-javascript =
    prettyprint-javascript-TopLevelDeclaration

  prettyprint-javascript =
    prettyprint-javascript-HoistableDeclaration

  prettyprint-javascript =
    prettyprint-javascript-FunctionDeclaration

  prettyprint-javascript(|sort):
    t -> <prettyprint-javascript-BlockStatement>
    where <?"BlockStatement"> sort

  prettyprint-javascript(|sort):
    t -> <prettyprint-javascript-Statement>
    where <?"Statement"> sort

  prettyprint-javascript(|sort):
    t -> <prettyprint-javascript-InitializeAssignment>
    where <?"InitializeAssignment"> sort

  prettyprint-javascript(|sort):
    t -> <prettyprint-javascript-Declaration>
    where <?"Declaration"> sort

  prettyprint-javascript(|sort):
    t -> <prettyprint-javascript-TopLevelDeclaration>
    where <?"TopLevelDeclaration"> sort

  prettyprint-javascript(|sort):
    t -> <prettyprint-javascript-HoistableDeclaration>
    where <?"HoistableDeclaration"> sort

  prettyprint-javascript(|sort):
    t -> <prettyprint-javascript-FunctionDeclaration>
    where <?"FunctionDeclaration"> sort

  prettyprint-javascript-BlockStatement :
    BlockStatement(t1__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("{")]
                              )
                            , t1__'
                            , H(
                                [SOpt(HS(), "0")]
                              , [S("}")]
                              )
                            ]
    with t1__' := <pp-indent(|"2")> [ <pp-V-list(prettyprint-javascript-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                    ]

  is-javascript-BlockStatement =
    ?BlockStatement(_)

  javascript-get-indent :
    (t@BlockStatement(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"BlockStatement"> sort
    with switch !index
           case ?1 :
             indent := "  "
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@BlockStatement(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"BlockStatement"> sort
    with switch !index
           case ?1 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@BlockStatement(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"BlockStatement"> sort
    with switch !index
           case ?1 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-javascript-Statement)
    where t1__' := <pp-one-Z(prettyprint-javascript-BlockStatement) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  prettyprint-javascript-Statement :
    ExpStmt(t1__) -> [ H(
                         [SOpt(HS(), "0")]
                       , [t1__', S(";")]
                       )
                     ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-javascript-Statement =
    ?ExpStmt(_)

  javascript-get-indent :
    (t@ExpStmt(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@ExpStmt(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@ExpStmt(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    For(t1__, t2__, t3__, t4__) -> [ H(
                                       [SOpt(HS(), "0")]
                                     , [ S("for (")
                                       , t1__'
                                       , S(" ; ")
                                       , t2__'
                                       , S(" ; ")
                                       , t3__'
                                       , S(") {")
                                       ]
                                     )
                                   , t4__'
                                   , H(
                                       [SOpt(HS(), "0")]
                                     , [S("}")]
                                     )
                                   ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Declaration) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t3__
    with t4__' := <pp-indent(|"2")> [ <pp-V-list(prettyprint-javascript-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t4__
                                    ]

  is-javascript-Statement =
    ?For(_, _, _, _)

  javascript-get-indent :
    ( t@For(t1__, t2__, t3__, t4__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := "  "
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    ( t@For(t1__, t2__, t3__, t4__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           case ?4 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    ( t@For(t1__, t2__, t3__, t4__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           case ?4 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    ForOf(t1__, t2__, t3__) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [ S("for (")
                                   , t1__'
                                   , S(" of ")
                                   , t2__'
                                   , S("){")
                                   ]
                                 )
                               , t3__'
                               , H(
                                   [SOpt(HS(), "0")]
                                 , [S("}")]
                                 )
                               ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Declaration) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-indent(|"2")> [ <pp-V-list(prettyprint-javascript-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                    ]

  is-javascript-Statement =
    ?ForOf(_, _, _)

  javascript-get-indent :
    ( t@ForOf(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := "  "
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    ( t@ForOf(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    ( t@ForOf(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    ForIn(t1__, t2__, t3__) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [ S("for (")
                                   , t1__'
                                   , S(" in ")
                                   , t2__'
                                   , S("){")
                                   ]
                                 )
                               , t3__'
                               , H(
                                   [SOpt(HS(), "0")]
                                 , [S("}")]
                                 )
                               ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Declaration) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-indent(|"2")> [ <pp-V-list(prettyprint-javascript-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                    ]

  is-javascript-Statement =
    ?ForIn(_, _, _)

  javascript-get-indent :
    ( t@ForIn(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := "  "
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    ( t@ForIn(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    ( t@ForIn(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    While(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ S("while (")
                             , t1__'
                             , S(") {")
                             ]
                           )
                         , t2__'
                         , H(
                             [SOpt(HS(), "0")]
                           , [S("}")]
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-indent(|"2")> [ <pp-V-list(prettyprint-javascript-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                    ]

  is-javascript-Statement =
    ?While(_, _)

  javascript-get-indent :
    (t@While(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := "  "
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@While(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@While(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    If(t1__, t2__) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("if(")
                          , t1__'
                          , S(") ")
                          , t2__'
                          ]
                        )
                      ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-javascript-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-javascript-Statement =
    ?If(_, _)

  javascript-get-indent :
    (t@If(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@If(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@If(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    IfElse(t1__, t2__, t3__) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [ S("if(")
                                    , t1__'
                                    , S(") ")
                                    , t2__'
                                    , S(" else ")
                                    , t3__'
                                    ]
                                  )
                                ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-javascript-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-one-Z(prettyprint-javascript-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t3__

  is-javascript-Statement =
    ?IfElse(_, _, _)

  javascript-get-indent :
    ( t@IfElse(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    ( t@IfElse(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    ( t@IfElse(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    Return(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ S("return ")
                        , t1__'
                        , S(";")
                        ]
                      )
                    ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-javascript-Statement =
    ?Return(_)

  javascript-get-indent :
    (t@Return(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@Return(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@Return(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-javascript-Statement)
    where t1__' := <pp-one-Z(prettyprint-javascript-Import) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  prettyprint-javascript-Statement :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-javascript-Statement)
    where t1__' := <pp-one-Z(prettyprint-javascript-Export) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  prettyprint-javascript-Statement :
    DeclarationStatement(t1__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [t1__', S(";")]
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Declaration) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-javascript-Statement =
    ?DeclarationStatement(_)

  javascript-get-indent :
    (t@DeclarationStatement(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@DeclarationStatement(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@DeclarationStatement(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Statement :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-javascript-Statement)
    where t1__' := <pp-one-Z(prettyprint-javascript-FunctionDeclaration) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  prettyprint-javascript-Statement :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-javascript-Statement)
    where t1__' := <pp-one-Z(prettyprint-javascript-ClassDeclaration) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  prettyprint-javascript-InitializeAssignment :
    InitializeAssignment(t1__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [S("= "), t1__']
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  is-javascript-InitializeAssignment =
    ?InitializeAssignment(_)

  javascript-get-indent :
    (t@InitializeAssignment(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"InitializeAssignment"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@InitializeAssignment(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"InitializeAssignment"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@InitializeAssignment(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"InitializeAssignment"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Declaration :
    VarDeclaration(t1__, t2__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [ S("var ")
                                      , t1__'
                                      , S(" ")
                                      , t2__'
                                      ]
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-javascript-LeftHandSideExpression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-option(
                     pp-one-Z(prettyprint-javascript-InitializeAssignment) <+ pp-one-Z(prettyprint-completion-aux)
                   )> t2__

  is-javascript-Declaration =
    ?VarDeclaration(_, _)

  javascript-get-indent :
    (t@VarDeclaration(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Declaration"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@VarDeclaration(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Declaration"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@VarDeclaration(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Declaration"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Declaration :
    ConstDeclaration(t1__, t2__) -> [ H(
                                        [SOpt(HS(), "0")]
                                      , [ S("const ")
                                        , t1__'
                                        , S(" ")
                                        , t2__'
                                        ]
                                      )
                                    ]
    with t1__' := <pp-one-Z(prettyprint-javascript-LeftHandSideExpression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-option(
                     pp-one-Z(prettyprint-javascript-InitializeAssignment) <+ pp-one-Z(prettyprint-completion-aux)
                   )> t2__

  is-javascript-Declaration =
    ?ConstDeclaration(_, _)

  javascript-get-indent :
    (t@ConstDeclaration(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Declaration"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@ConstDeclaration(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Declaration"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@ConstDeclaration(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Declaration"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Declaration :
    LetDeclaration(t1__, t2__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [ S("let ")
                                      , t1__'
                                      , S(" ")
                                      , t2__'
                                      ]
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-javascript-LeftHandSideExpression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-option(
                     pp-one-Z(prettyprint-javascript-InitializeAssignment) <+ pp-one-Z(prettyprint-completion-aux)
                   )> t2__

  is-javascript-Declaration =
    ?LetDeclaration(_, _)

  javascript-get-indent :
    (t@LetDeclaration(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Declaration"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@LetDeclaration(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Declaration"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@LetDeclaration(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Declaration"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-Declaration :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-javascript-Declaration)
    where t1__' := <pp-one-Z(prettyprint-javascript-TopLevelDeclaration) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  prettyprint-javascript-TopLevelDeclaration :
    GlobalDeclaration(t1__, t2__) -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [t1__', S(" "), t2__']
                                       )
                                     ]
    with t1__' := <pp-one-Z(prettyprint-javascript-LeftHandSideExpression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-option(
                     pp-one-Z(prettyprint-javascript-InitializeAssignment) <+ pp-one-Z(prettyprint-completion-aux)
                   )> t2__

  is-javascript-TopLevelDeclaration =
    ?GlobalDeclaration(_, _)

  javascript-get-indent :
    (t@GlobalDeclaration(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"TopLevelDeclaration"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@GlobalDeclaration(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"TopLevelDeclaration"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@GlobalDeclaration(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"TopLevelDeclaration"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-TopLevelDeclaration :
    ExpressionAssignment(t1__, t2__) -> [ H(
                                            [SOpt(HS(), "0")]
                                          , [t1__', S(" "), t2__']
                                          )
                                        ]
    with t1__' := <pp-one-Z(prettyprint-javascript-Expression) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-one-Z(prettyprint-javascript-InitializeAssignment) <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-javascript-TopLevelDeclaration =
    ?ExpressionAssignment(_, _)

  javascript-get-indent :
    (t@ExpressionAssignment(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"TopLevelDeclaration"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    (t@ExpressionAssignment(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"TopLevelDeclaration"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    (t@ExpressionAssignment(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"TopLevelDeclaration"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-javascript-HoistableDeclaration :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-javascript-HoistableDeclaration)
    where t1__' := <pp-one-Z(prettyprint-javascript-FunctionDeclaration) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  prettyprint-javascript-FunctionDeclaration :
    FunctionDeclaration(t1__, t2__, t3__) -> [ H(
                                                 [SOpt(HS(), "0")]
                                               , [ S("function ")
                                                 , t1__'
                                                 , S("(")
                                                 , t2__'
                                                 , S(") {")
                                                 ]
                                               )
                                             , t3__'
                                             , H(
                                                 [SOpt(HS(), "0")]
                                               , [S("}")]
                                               )
                                             , H(
                                                 []
                                               , [S("")]
                                               )
                                             ]
    with t1__' := <pp-one-Z(prettyprint-javascript-ID) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-H-list(prettyprint-javascript-LeftHandSideExpression|",")
                   <+ pp-one-Z(prettyprint-completion-aux)> t2__
    with t3__' := <pp-indent(|"2")> [ <pp-V-list(prettyprint-javascript-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                    ]

  is-javascript-FunctionDeclaration =
    ?FunctionDeclaration(_, _, _)

  javascript-get-indent :
    ( t@FunctionDeclaration(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"FunctionDeclaration"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := "  "
           otherwise :
             indent := ""
         end

  javascript-get-separator :
    ( t@FunctionDeclaration(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"FunctionDeclaration"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ","
           case ?3 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  javascript-get-leading-ws :
    ( t@FunctionDeclaration(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"FunctionDeclaration"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := ""
           case ?3 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  is-javascript-BlockStatement =
    fail

  is-javascript-Statement =
    fail

  is-javascript-InitializeAssignment =
    fail

  is-javascript-Declaration =
    fail

  is-javascript-TopLevelDeclaration =
    fail

  is-javascript-HoistableDeclaration =
    fail

  is-javascript-FunctionDeclaration =
    fail

  prettyprint-javascript-BlockStatement :
    amb([h|hs]) -> <prettyprint-javascript-BlockStatement> h

  prettyprint-javascript-Statement :
    amb([h|hs]) -> <prettyprint-javascript-Statement> h

  prettyprint-javascript-InitializeAssignment :
    amb([h|hs]) -> <prettyprint-javascript-InitializeAssignment> h

  prettyprint-javascript-Declaration :
    amb([h|hs]) -> <prettyprint-javascript-Declaration> h

  prettyprint-javascript-TopLevelDeclaration :
    amb([h|hs]) -> <prettyprint-javascript-TopLevelDeclaration> h

  prettyprint-javascript-HoistableDeclaration :
    amb([h|hs]) -> <prettyprint-javascript-HoistableDeclaration> h

  prettyprint-javascript-FunctionDeclaration :
    amb([h|hs]) -> <prettyprint-javascript-FunctionDeclaration> h

  prettyprint-javascript-BlockStatement :
    BlockStatement-Plhdr() -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$BlockStatement")]
                                )
                              ]

  is-javascript-BlockStatement =
    ?BlockStatement-Plhdr()

  prettyprint-javascript-Import :
    Import-Plhdr() -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("$Import")]
                        )
                      ]

  is-javascript-Import =
    ?Import-Plhdr()

  prettyprint-javascript-Export :
    Export-Plhdr() -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("$Export")]
                        )
                      ]

  is-javascript-Export =
    ?Export-Plhdr()

  prettyprint-javascript-ClassDeclaration :
    ClassDeclaration-Plhdr() -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("$ClassDeclaration")]
                                  )
                                ]

  is-javascript-ClassDeclaration =
    ?ClassDeclaration-Plhdr()

  prettyprint-javascript-Declaration :
    Declaration-Plhdr() -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$Declaration")]
                             )
                           ]

  is-javascript-Declaration =
    ?Declaration-Plhdr()

  prettyprint-javascript-TopLevelDeclaration :
    TopLevelDeclaration-Plhdr() -> [ H(
                                       [SOpt(HS(), "0")]
                                     , [S("$TopLevelDeclaration")]
                                     )
                                   ]

  is-javascript-TopLevelDeclaration =
    ?TopLevelDeclaration-Plhdr()

  prettyprint-javascript-Expression :
    Expression-Plhdr() -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$Expression")]
                            )
                          ]

  is-javascript-Expression =
    ?Expression-Plhdr()

  prettyprint-javascript-InitializeAssignment :
    InitializeAssignment-Plhdr() -> [ H(
                                        [SOpt(HS(), "0")]
                                      , [S("$InitializeAssignment")]
                                      )
                                    ]

  is-javascript-InitializeAssignment =
    ?InitializeAssignment-Plhdr()

  prettyprint-javascript-HoistableDeclaration :
    HoistableDeclaration-Plhdr() -> [ H(
                                        [SOpt(HS(), "0")]
                                      , [S("$HoistableDeclaration")]
                                      )
                                    ]

  is-javascript-HoistableDeclaration =
    ?HoistableDeclaration-Plhdr()

  prettyprint-javascript-FunctionDeclaration :
    FunctionDeclaration-Plhdr() -> [ H(
                                       [SOpt(HS(), "0")]
                                     , [S("$FunctionDeclaration")]
                                     )
                                   ]

  is-javascript-FunctionDeclaration =
    ?FunctionDeclaration-Plhdr()

  prettyprint-javascript-ID :
    ID-Plhdr() -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("$ID")]
                    )
                  ]

  is-javascript-ID =
    ?ID-Plhdr()

  prettyprint-javascript-LeftHandSideExpression :
    LeftHandSideExpression-Plhdr() -> [ H(
                                          [SOpt(HS(), "0")]
                                        , [S("$LeftHandSideExpression")]
                                        )
                                      ]

  is-javascript-LeftHandSideExpression =
    ?LeftHandSideExpression-Plhdr()

  prettyprint-javascript-Statement :
    Statement-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$Statement")]
                           )
                         ]

  is-javascript-Statement =
    ?Statement-Plhdr()

  prettyprint-javascript-BlockStatement :
    BlockStatement-Plhdr(_) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [S("$BlockStatement")]
                                 )
                               ]

  is-javascript-BlockStatement =
    ?BlockStatement-Plhdr(_)

  prettyprint-javascript-Import :
    Import-Plhdr(_) -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("$Import")]
                         )
                       ]

  is-javascript-Import =
    ?Import-Plhdr(_)

  prettyprint-javascript-Export :
    Export-Plhdr(_) -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("$Export")]
                         )
                       ]

  is-javascript-Export =
    ?Export-Plhdr(_)

  prettyprint-javascript-ClassDeclaration :
    ClassDeclaration-Plhdr(_) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("$ClassDeclaration")]
                                   )
                                 ]

  is-javascript-ClassDeclaration =
    ?ClassDeclaration-Plhdr(_)

  prettyprint-javascript-Declaration :
    Declaration-Plhdr(_) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$Declaration")]
                              )
                            ]

  is-javascript-Declaration =
    ?Declaration-Plhdr(_)

  prettyprint-javascript-TopLevelDeclaration :
    TopLevelDeclaration-Plhdr(_) -> [ H(
                                        [SOpt(HS(), "0")]
                                      , [S("$TopLevelDeclaration")]
                                      )
                                    ]

  is-javascript-TopLevelDeclaration =
    ?TopLevelDeclaration-Plhdr(_)

  prettyprint-javascript-Expression :
    Expression-Plhdr(_) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$Expression")]
                             )
                           ]

  is-javascript-Expression =
    ?Expression-Plhdr(_)

  prettyprint-javascript-InitializeAssignment :
    InitializeAssignment-Plhdr(_) -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [S("$InitializeAssignment")]
                                       )
                                     ]

  is-javascript-InitializeAssignment =
    ?InitializeAssignment-Plhdr(_)

  prettyprint-javascript-HoistableDeclaration :
    HoistableDeclaration-Plhdr(_) -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [S("$HoistableDeclaration")]
                                       )
                                     ]

  is-javascript-HoistableDeclaration =
    ?HoistableDeclaration-Plhdr(_)

  prettyprint-javascript-FunctionDeclaration :
    FunctionDeclaration-Plhdr(_) -> [ H(
                                        [SOpt(HS(), "0")]
                                      , [S("$FunctionDeclaration")]
                                      )
                                    ]

  is-javascript-FunctionDeclaration =
    ?FunctionDeclaration-Plhdr(_)

  prettyprint-javascript-ID :
    ID-Plhdr(_) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("$ID")]
                     )
                   ]

  is-javascript-ID =
    ?ID-Plhdr(_)

  prettyprint-javascript-LeftHandSideExpression :
    LeftHandSideExpression-Plhdr(_) -> [ H(
                                           [SOpt(HS(), "0")]
                                         , [S("$LeftHandSideExpression")]
                                         )
                                       ]

  is-javascript-LeftHandSideExpression =
    ?LeftHandSideExpression-Plhdr(_)

  prettyprint-javascript-Statement :
    Statement-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$Statement")]
                            )
                          ]

  is-javascript-Statement =
    ?Statement-Plhdr(_)

  prettyprint-javascript-InitializeAssignment :
    InitializeAssignment-Opt-Plhdr() -> [ H(
                                            []
                                          , [S("")]
                                          )
                                        ]

  is-javascript-InitializeAssignment =
    ?InitializeAssignment-Opt-Plhdr()

  prettyprint-javascript-LeftHandSideExpression :
    LeftHandSideExpression-Opt-Plhdr() -> [ H(
                                              []
                                            , [S("")]
                                            )
                                          ]

  is-javascript-LeftHandSideExpression =
    ?LeftHandSideExpression-Opt-Plhdr()

  prettyprint-javascript-Statement :
    Statement-Opt-Plhdr() -> [ H(
                                 []
                               , [S("")]
                               )
                             ]

  is-javascript-Statement =
    ?Statement-Opt-Plhdr()