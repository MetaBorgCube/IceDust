module generating/js/common

imports

  signatures/Types-sig
  api/model-names-api  
  api/types-api

rules


  
  exp-empty : One() -> <exp-empty-one>
  exp-empty : ZeroOrOne() -> <exp-empty-one>
  exp-empty : ZeroOrMore() -> <exp-empty-many>
  exp-empty : OneOrMore() -> <exp-empty-many>
        
  exp-empty-one = !js-exp |[null]|
  exp-empty-many = <exp-collection> []
  
  exp-attribute-empty: attribute -> js-exp |[undefined]|
    where
      name-is-derived ; debug 
    ; <name-get-multiplicity ; upper-one> attribute
    ; debug
    
  exp-attribute-empty = debug ; name-get-multiplicity ; debug ; exp-empty
      
    
  exp-collection : exp_elements* -> js-exp |[
    [exp_elements*] 
  ]|
        
  simplify-multiplicity : ZeroOrOne() -> One()
  simplify-multiplicity : OneOrMore() -> ZeroOrMore()
  simplify-multiplicity = id 
  
  lub-simple: (One(), ZeroOrOne()) -> ZeroOrOne()
  lub-simple: (ZeroOrOne(), One()) -> ZeroOrOne()
  lub-simple: (ZeroOrMore(), _) -> ZeroOrMore()
  lub-simple: (_, ZeroOrMore()) -> ZeroOrMore()
  lub-simple: (_, OneOrMore()) -> ZeroOrMore()
  lub-simple: (OneOrMore(), _) -> ZeroOrMore()
  lub-simple: (x, x) -> x
  
  with-prefix: ("", str) -> str
  with-prefix: (prefix, str) -> $[[prefix]_[str]]