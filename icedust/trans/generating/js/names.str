module generating/js/names

imports
  api/model-names-api
  api/types-api
  
  lib/js/js-util

rules

  attribute-name: attribute -> $[[entity]_[attribute]]
    with
      entity := <attributename-get-entityname> attribute
  
  setter-function-name: attribute -> $[set[name]]
    with
      name := <attribute-name> attribute
  
  function-name-many = !$[[<id>]_Many]
  
  
  attribute-function-name(|prefix) = debug ; (attribute-name, multiplicity-function-postfix) ; debug ; !$[[prefix][<Fst>][<Snd>]]
  
  getter-function-name = attribute-function-name(|"get")
  setter-function-name = attribute-function-name(|"set")
  invalidation-function-name = attribute-function-name(|"invalidate")
  memoize-function-name = attribute-function-name(|"memoize")
  
  multiplicity-function-postfix = upper-one ; !""
  multiplicity-function-postfix = upper-many ; !"_Many"
  
  
  id-var = upper-one ; !"id"
  id-var = upper-many ; !"ids"
      
  attribute-table-expression: attribute -> <js-string> x_entity
    where
      is-attributename ; attributename-is-normal-default
    with
      x_entity := <attributename-get-entityname> attribute
      
  attribute-table-expression = attribute-name ; js-string