module generating/webdsl-java/generate

imports // constructors

  signatures/Modules-sig

imports // functions

  libstratego-gpp
  api/module-api
  lib/js/pp/javascript-pp
  lib/js/pp/javascript-parenthesize
  generating/webdsl/java/module
  generating/webdsl/js/module

rules // documentation
  
  /*
   * Generate a native java java.util.concurrent.ConcurrentLinkedQueue<E> for each type.
   * Each normal page request can flag items dirty in these queues.
   * The central eventual consistent thread empties these queues and computes everything.
   * Items may be added during computation, the algorithm will do those first in order to avoid unnecessary computation (note this might lead to starvation during heavy use).
   */

rules // Builders

    pp-js-string : x -> result
    with
      result :=
            <parenthesize-javascript
            ; prettyprint-javascript
            ; !V([], <id>)
            ; box2text-string(|120)> x
  
  generate-webdsl-js-code: moduleName -> result
    with
      derivation-js := <moduleName-to-derivation-js> moduleName
      ;    result   := <pp-js-string> derivation-js
