module expressions-multiplicity-operators

rules

  [[ ChoiceLeft(e1, e2) ^ (s) : TTuple(out_type, out_mult, out_strat) ]] :=
    [[ e1 ^ (s) : TTuple(e1_type, e1_mult, e1_strat) ]],
    [[ e2 ^ (s) : TTuple(e2_type, e2_mult, e2_strat) ]],
    out_type is sub.lub of (e1_type,e2_type),
    out_mult is choiceLeftMult of (e1_mult, e2_mult),
    out_strat is strat.lub of (e1_strat,e2_strat).

  [[ Merge(e1, e2) ^ (s) : TTuple(out_type, out_mult, out_strat) ]] :=
    [[ e1 ^ (s) : TTuple(e1_type, e1_mult, e1_strat) ]],
    [[ e2 ^ (s) : TTuple(e2_type, e2_mult, e2_strat) ]],
    out_type is sub.lub of (e1_type,e2_type),
    out_mult is mergeMult of (e1_mult, e2_mult),
    out_strat is strat.lub of (e1_strat,e2_strat).
