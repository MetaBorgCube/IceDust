module api/types-api

imports // signatures

  signatures/Types-sig

rules

  is-type = ?Boolean()
  is-type = ?Float()
  is-type = ?Datetime()
  is-type = ?Int()
  is-type = ?String()
  is-type = ?EntityType(_)

  is-multiplicity = ?One()
  is-multiplicity = ?ZeroOrOne()
  is-multiplicity = ?OneOrMoreOrdered()
  is-multiplicity = ?ZeroOrMoreOrdered()
  is-multiplicity = ?OneOrMore()
  is-multiplicity = ?ZeroOrMore()
  
  is-strategy = ?OnDemand()
  is-strategy = ?OnDemandIncremental()
  is-strategy = ?Incremental()
  is-strategy = ?Eventual()
  is-strategy = ?OnDemandEventual()

rules

  pp2-type = ?Boolean();!"Boolean"
  pp2-type = ?Float();!"Float"
  pp2-type = ?Int();!"Int"
  pp2-type = ?String();!"String"
  pp2-type = ?Datetime();!"Datetime"
  pp2-type = where(is-string)
  
  pp2-multiplicity = ?One();!""
  pp2-multiplicity = ?ZeroOrOne();!"?"
  pp2-multiplicity = ?OneOrMoreOrdered();!"+ (ordered)"
  pp2-multiplicity = ?ZeroOrMoreOrdered();!"* (ordered)"
  pp2-multiplicity = ?OneOrMore();!"+"
  pp2-multiplicity = ?ZeroOrMore();!"*"
  
  pp2-type-multiplicity = ?(type, multiplicity);!$[[<pp2-type>type][<pp2-multiplicity>multiplicity]]

rules // multiplicity and ordering predicates

  ordered   = ?One()
  ordered   = ?ZeroOrOne()
  ordered   = ?OneOrMoreOrdered()
  ordered   = ?ZeroOrMoreOrdered()
  unordered = ?OneOrMore()
  unordered = ?ZeroOrMore()
  
  lower-zero = ?ZeroOrOne()
  lower-zero = ?ZeroOrMore()
  lower-zero = ?ZeroOrMoreOrdered()
  lower-one  = ?One()
  lower-one  = ?OneOrMore()
  lower-one  = ?OneOrMoreOrdered()
  
  upper-one  = ?One()
  upper-one  = ?ZeroOrOne()
  upper-many = ?OneOrMore()
  upper-many = ?ZeroOrMore()
  upper-many = ?OneOrMoreOrdered()
  upper-many = ?ZeroOrMoreOrdered()
  
  upper-many-ordered   = upper-many;ordered
  upper-many-unordered = upper-many;unordered
  
rules

  mult-inbounds(|multiplicity) = where(!multiplicity;lower-zero;upper-many)
  mult-inbounds(|multiplicity) = where(!multiplicity;lower-one ;upper-many) ;?i ;where(!(i,1);geq)
  mult-inbounds(|multiplicity) = where(!multiplicity;lower-zero;upper-one ) ;?i ;where(!(i,1);leq)
  mult-inbounds(|multiplicity) = where(!multiplicity;lower-one ;upper-one ) ;?i ;where(!(i,1);eq)
  