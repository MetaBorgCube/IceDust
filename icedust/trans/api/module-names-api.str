module api/module-names-api

imports // constructors

//  signatures/Model-sig
//  api/_runtime-constructors
//  desugaring/constructors
  analysis2/constructors
//  names/naming/names
  analysis/_constructors
  generating/_ir/constructors

imports // functions

//  api/_runtime
  api/data-names-api
  api/model-names-api
  lib/index
  lib/eq
//  lib/origin
//  lib/search
  lib/string
//  lib/nabl-ext
  lib/lists-tuples
  lib/traverse
//  generating/_ir/constructors
  lib/nabl2
  
rules // module

  modulename-get-entitynames = get-decl-assoc(|"Module");get-scope-decl-names(|"Entity");filter(is-entityname);string-sort-anno
  
  modulename-get-entityinstancenames    = concat(modulename-get-entityinstancenames-sg, modulename-get-entityinstancenames-i);string-sort-anno
  modulename-get-entityinstancenames-sg = get-property(|"Module","datascope");get-scope-decl-names;filter(is-entityinstancename)
  modulename-get-entityinstancenames-i  = index-get2(|"Member")
  
  modulename-get-entityinstancename(|einame) = modulename-get-entityinstancenames;filter(eq-no-anno(|einame));Hd
  
  // string -> [string]
  modulename-get-attributenames = modulename-get-entitynames;fmap(entityname-get-attributenames)
  
  modulename-get-attributenames-default-derivation = modulename-get-attributenames;filter(attributename-is-default-derivation)  
  
  modulename-get-arrleftrootnames        = modulename-get-entitynames;fmap(entityname-get-arrleftrootnames)       ;make-set;string-sort-anno
  modulename-get-arrleftnames            = modulename-get-entitynames;fmap(entityname-get-arrleftnames)           ;make-set;string-sort-anno
  modulename-get-arrleftnames-not-inline = modulename-get-entitynames;fmap(entityname-get-arrleftnames-not-inline);make-set;string-sort-anno
  modulename-get-arrinames               = modulename-get-entitynames;fmap(entityname-get-arrinames)              ;make-set;string-sort-anno
  
  modulename-get-arrinames-default-derived = modulename-get-arrinames;filter(name-is-default-derived)
  
  modulename-get-arrinames-default-derived-incremental          = modulename-get-arrinames-default-derived;filter(name-is-incremental)
  modulename-get-arrinames-default-derived-eventual             = modulename-get-arrinames-default-derived;filter(name-is-eventual)
  modulename-get-arrinames-default-derived-incremental-eventual = modulename-get-arrinames-default-derived;filter(name-is-incremental+name-is-eventual)
  
  modulename-get-arrinames-default-derived-has-expr             = modulename-get-arrinames-default-derived;filter(name-has-expr)
  
  modulename-get-arrinames-default-derived-has-expr-notinline   = modulename-get-arrinames-default-derived-has-expr;filter(not(name-is-inline))
  
  // string -> [[string]]
  modulename-get-attributenames-topo = index-get2(|TopoSort());map(filter(where(is-attributename)));filter(list-not-empty)

  modulename-get-attributenames-topo-default-derivation = modulename-get-attributenames-topo;map(filter(attributename-is-default-derivation));filter(list-not-empty)  
  
  modulename-get-arrinames-topo = index-get2(|TopoSort());map(filter(where(name-is-arri)));filter(list-not-empty)
  
  modulename-get-arrinames-topo-default-derivation = modulename-get-arrinames-topo;map(filter(name-is-default-derived));filter(list-not-empty)
  
  modulename-get-arrinames-topo-default-derivation-incremental = modulename-get-arrinames-topo-default-derivation;map(filter(name-is-incremental));filter(list-not-empty)
  modulename-get-arrinames-topo-default-derivation-eventual    = modulename-get-arrinames-topo-default-derivation;map(filter(name-is-eventual));filter(list-not-empty)
  
  modulename-get-relationnames = modulename-get-entitynames;fmap(entityname-get-relationnames)
  modulename-get-relationnames-left = modulename-get-relationnames;filter(relationname-is-left)
  
  modulename-get-rolenames = modulename-get-entitynames;fmap(entityname-get-rolenames)
  
//  modulename-get-toposort = index-get-prop(|TopoSort());Hd

  is-modulename = where(is-string;get-property(|"Module","ns");?Module())

  modulename-get-exprs = index-get(|AST())

  modulename-get-implstr = index-get(|ImplStrategy())
  
  modulename-is-calconread           = where(modulename-get-implstr;?OnDemand())
  modulename-is-calconread           = where(modulename-get-implstr;?OnDemandEventual())
  modulename-is-calconwrite          = where(modulename-get-implstr;?Incremental())
  modulename-is-eventuallyconsistent = where(modulename-get-implstr;?Eventual())

  modulename-get-uistyle = index-get(|UIStyle())
  
  modulename-is-noui   = where(modulename-get-uistyle;?NoUI())
  modulename-is-explorerui = where(modulename-get-uistyle;?ExplorerUI())
  
  modulename-decl-entityinstancename(|einame, type): modulename -> einame-decl
    with
      einame-decl := einame{modulename};
      <index-add(|modulename , "Member")>einame-decl;
      <index-set(|einame-decl, "Parent")>modulename;
      <index-set(|einame-decl, "type"  )>type
  