module types-references-shortcuts

language icedust

fixture [[
  module test
  model
  
  entity Student {
    age : Int = 3
  }
  
  entity Course {

  }
  
  relation Enrollment{
    Student *
    Course + (ordered)
    
    student.courses <-> course.students
  }

  data
  s : Student {}
  c : Course{
    students = s
  }
  execute
  3
  [[...]]
]]

test type of inverse role  [[c.enrollment.student]]  run get-type2 to "Student"
test type of shortcut      [[c.students]]            run get-type2 to "Student"
test type of inverse role2 [[s.enrollment.course]]   run get-type2 to "Course"
test type of shortcut2     [[s.courses]]             run get-type2 to "Course"

test type of shortcut.shortcut    [[s.courses.students]]   run get-type2 to "Student"

test multiplicity of inverse role  [[c.enrollment.student]]  run get-multiplicity to OneOrMoreOrdered()
test multiplicity of shortcut      [[c.students]]            run get-multiplicity to OneOrMoreOrdered()
test multiplicity of inverse role2 [[s.enrollment.course]]   run get-multiplicity to ZeroOrMore()
test multiplicity of shortcut2     [[s.courses]]             run get-multiplicity to ZeroOrMore()

test ordering of inverse role  [[c.enrollment.student]]  run get-multiplicity to OneOrMoreOrdered() // is ordered
test ordering of shortcut      [[c.students]]            run get-multiplicity to OneOrMoreOrdered() // is ordered
test ordering of inverse role2 [[s.enrollment.course]]   run get-multiplicity to ZeroOrMore() // is unordered
test ordering of shortcut2     [[s.courses]]             run get-multiplicity to ZeroOrMore() // is unordered
