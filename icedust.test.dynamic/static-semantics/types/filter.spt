module types-filter

language icedust

fixture [[
module test
model

  entity Assignment {}
  entity Submission {}
  entity Student    {}
  
  relation Assignment.parent     ? <-> * Assignment.children
  relation Submission.student    1 <-> * Student.submissions
  relation Submission.assignment 1 <-> * Assignment.submissions
  
  [[...]]
]]

test find variable type [[
  relation Submission.parent     ? =  
    assignment.parent.submissions.find(x => true &&  [[x]].student == student)
                                   <-> * Submission.children
]] run get-type2 on #1 to "Submission"

test find variable multiplicity [[
  relation Submission.parent     ? =  
    assignment.parent.submissions.find(x => true &&  [[x]].student == student)
                                   <-> * Submission.children
]] run get-multiplicity on #1 to One()

test find variable strategy [[
  relation Submission.parent     ? =  
    assignment.parent.submissions.find(x => true &&  [[x]].student == student)
                                   <-> * Submission.children
]] run get-strategy on #1 to Incremental()

test find type [[
  relation Submission.parent     ? =  
    [[assignment.parent.submissions.find(x => true &&  x.student == student)]]
                                   <-> * Submission.children
]] run get-type2 on #1 to "Submission"

test find multiplicity [[
  relation Submission.parent     ? =  
    [[assignment.parent.submissions.find(x => true &&  x.student == student)]]
                                   <-> * Submission.children
]] run get-multiplicity on #1 to ZeroOrOne()

test filter multiplicity [[
  relation Submission.parent     ? =  
    ([[assignment.parent.submissions.filter(x => true &&  x.student == student)]]).first()
                                   <-> * Submission.children
]] run get-multiplicity on #1 to ZeroOrMore()

test filter strategy [[
  relation Submission.parent     ? =  
    [[assignment.parent.submissions.filter(x => true &&  x.student == student)]].first()
                                   <-> * Submission.children
]] run get-strategy on #1 to Incremental()
