module api-traits-flowsto

language icedust2

test Query attribute flows to with type filter[[
module test

model

  entity Picture {
    dummy : String 1
    [[path]]: String 1
  }
  
  trait HasPicture {
  
  }
  
  relation Picture.usedBy <-> 1 HasPicture.picture
  
  entity Page extends HasPicture {
    display : String = "<img href='"+picture.path+"'>"
  }
]] run name-get-flowsto-pathexprs-test on #1 to !ATerm[
  MemberAccess(FilterType(Ref("usedBy"),"Page"),"display")
]

test Query attribute flows to with type filter 2 [[
module test

model

  trait IA {
    [[name]]: String
  }

  entity A extends IA {
  
  }
  
  trait IB {
  
  }
  
  relation A <-> 1 IB
  
  entity B extends IB {
  
  }
  
  trait IC {
  
  }
  
  relation B <-> 1 IC
  
  entity C extends IC {
  
  }
  
  trait ID {
  
  }
  
  relation C <-> 1 ID
  
  trait D extends ID {
    name : String = c.b.a.name
  }

]] run name-get-flowsto-pathexprs-test on #1 to !ATerm[
  MemberAccess(
    FilterType(
      MemberAccess(
        FilterType(
          MemberAccess(
            FilterType(
              MemberAccess(
                FilterType(
                  This(),
                  "A"
                ),
                "iB"
              ),
              "B"
            ),
            "iC"
          ),
          "C"
        ),
        "iD"
      ),
      "D"
    ),
    "name"
  )
]


test Query attribute flows to with type filter 3 [[
module test

model

  trait Named {
    [[name]] : String
  }
  
  entity Page extends Named {
    title : String = name
  }
]] run name-get-flowsto-pathexprs-test on #1 to !ATerm[
  MemberAccess(
    FilterType(
      This(),
      "Page"
    ),
    "title"
  )
]
