module include/Java-parenthesize

imports
  libstratego-lib
  java/Java


strategies
  io-Java-parenthesize =
    io-wrap(parenthesize-Java)

  parenthesize-Java =
    innermost(JavaParenthesize)


rules

  JavaParenthesize :
    URightShift(t_0, t_1) -> URightShift(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + fail)> t_0

  JavaParenthesize :
    URightShift(t_0, t_1) -> URightShift(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + fail)> t_1

  JavaParenthesize :
    RightShift(t_0, t_1) -> RightShift(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + fail)> t_0

  JavaParenthesize :
    RightShift(t_0, t_1) -> RightShift(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?RightShift(_, _)
            + ?URightShift(_, _)
            + ?LeftShift(_, _)
            + fail)> t_1

  JavaParenthesize :
    LeftShift(t_0, t_1) -> LeftShift(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + fail)> t_0

  JavaParenthesize :
    LeftShift(t_0, t_1) -> LeftShift(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?LeftShift(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + fail)> t_1

  JavaParenthesize :
    Minus(t_0, t_1) -> Minus(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + fail)> t_0

  JavaParenthesize :
    Minus(t_0, t_1) -> Minus(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + fail)> t_1

  JavaParenthesize :
    Plus(t_0, t_1) -> Plus(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + fail)> t_0

  JavaParenthesize :
    Plus(t_0, t_1) -> Plus(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Plus(_, _)
            + ?Minus(_, _)
            + fail)> t_1

  JavaParenthesize :
    Remain(t_0, t_1) -> Remain(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + fail)> t_0

  JavaParenthesize :
    Remain(t_0, t_1) -> Remain(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + fail)> t_1

  JavaParenthesize :
    Div(t_0, t_1) -> Div(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + fail)> t_0

  JavaParenthesize :
    Div(t_0, t_1) -> Div(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Div(_, _)
            + ?Remain(_, _)
            + ?Mul(_, _)
            + fail)> t_1

  JavaParenthesize :
    Mul(t_0, t_1) -> Mul(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + fail)> t_0

  JavaParenthesize :
    Mul(t_0, t_1) -> Mul(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Mul(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + fail)> t_1

  JavaParenthesize :
    Not(t_0) -> Not(Parenthetical(t_0))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + fail)> t_0

  JavaParenthesize :
    Complement(t_0) -> Complement(Parenthetical(t_0))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + fail)> t_0

  JavaParenthesize :
    Minus(t_0) -> Minus(Parenthetical(t_0))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + fail)> t_0

  JavaParenthesize :
    Plus(t_0) -> Plus(Parenthetical(t_0))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + fail)> t_0

  JavaParenthesize :
    PreDecr(t_0) -> PreDecr(Parenthetical(t_0))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + fail)> t_0

  JavaParenthesize :
    PreIncr(t_0) -> PreIncr(Parenthetical(t_0))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + fail)> t_0

  JavaParenthesize :
    Method(t_0, t_1, t_2) -> Method(Parenthetical(t_0), t_1, t_2)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_0

  JavaParenthesize :
    Method(t_0, t_1, t_2) -> Method(t_0, Parenthetical(t_1), t_2)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_1

  JavaParenthesize :
    Method(t_0, t_1, t_2) -> Method(t_0, t_1, Parenthetical(t_2))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_2

  JavaParenthesize :
    Field(t_0, t_1) -> Field(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_0

  JavaParenthesize :
    Field(t_0, t_1) -> Field(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_1

  JavaParenthesize :
    ArrayAccess(t_0, t_1) -> ArrayAccess(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_0

  JavaParenthesize :
    ArrayAccess(t_0, t_1) -> ArrayAccess(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_1

  JavaParenthesize :
    CastRef(t_0, t_1) -> CastRef(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + fail)> t_0

  JavaParenthesize :
    CastRef(t_0, t_1) -> CastRef(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + fail)> t_1

  JavaParenthesize :
    CastPrim(t_0, t_1) -> CastPrim(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + fail)> t_0

  JavaParenthesize :
    CastPrim(t_0, t_1) -> CastPrim(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + fail)> t_1

  JavaParenthesize :
    PostDecr(t_0) -> PostDecr(Parenthetical(t_0))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostIncr(_)
            + fail)> t_0

  JavaParenthesize :
    PostIncr(t_0) -> PostIncr(Parenthetical(t_0))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + fail)> t_0

  JavaParenthesize :
    QNewInstance(t_0, t_1, t_2, t_3, t_4, t_5) -> QNewInstance(
                                                    Parenthetical(t_0)
                                                  , t_1
                                                  , t_2
                                                  , t_3
                                                  , t_4
                                                  , t_5
                                                  )
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_0

  JavaParenthesize :
    QNewInstance(t_0, t_1, t_2, t_3, t_4, t_5) -> QNewInstance(
                                                    t_0
                                                  , Parenthetical(t_1)
                                                  , t_2
                                                  , t_3
                                                  , t_4
                                                  , t_5
                                                  )
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_1

  JavaParenthesize :
    QNewInstance(t_0, t_1, t_2, t_3, t_4, t_5) -> QNewInstance(
                                                    t_0
                                                  , t_1
                                                  , Parenthetical(t_2)
                                                  , t_3
                                                  , t_4
                                                  , t_5
                                                  )
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_2

  JavaParenthesize :
    QNewInstance(t_0, t_1, t_2, t_3, t_4, t_5) -> QNewInstance(
                                                    t_0
                                                  , t_1
                                                  , t_2
                                                  , Parenthetical(t_3)
                                                  , t_4
                                                  , t_5
                                                  )
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_3

  JavaParenthesize :
    QNewInstance(t_0, t_1, t_2, t_3, t_4, t_5) -> QNewInstance(
                                                    t_0
                                                  , t_1
                                                  , t_2
                                                  , t_3
                                                  , Parenthetical(t_4)
                                                  , t_5
                                                  )
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_4

  JavaParenthesize :
    QNewInstance(t_0, t_1, t_2, t_3, t_4, t_5) -> QNewInstance(
                                                    t_0
                                                  , t_1
                                                  , t_2
                                                  , t_3
                                                  , t_4
                                                  , Parenthetical(t_5)
                                                  )
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + ?URightShift(_, _)
            + ?RightShift(_, _)
            + ?LeftShift(_, _)
            + ?Minus(_, _)
            + ?Plus(_, _)
            + ?Remain(_, _)
            + ?Div(_, _)
            + ?Mul(_, _)
            + ?Not(_)
            + ?Complement(_)
            + ?Minus(_)
            + ?Plus(_)
            + ?PreDecr(_)
            + ?PreIncr(_)
            + ?CastRef(_, _)
            + ?CastPrim(_, _)
            + ?PostDecr(_)
            + ?PostIncr(_)
            + fail)> t_5

  JavaParenthesize :
    ExcOr(t_0, t_1) -> ExcOr(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + fail)> t_0

  JavaParenthesize :
    ExcOr(t_0, t_1) -> ExcOr(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + fail)> t_1

  JavaParenthesize :
    And(t_0, t_1) -> And(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + fail)> t_0

  JavaParenthesize :
    And(t_0, t_1) -> And(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + fail)> t_1

  JavaParenthesize :
    NotEq(t_0, t_1) -> NotEq(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + fail)> t_0

  JavaParenthesize :
    NotEq(t_0, t_1) -> NotEq(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + fail)> t_1

  JavaParenthesize :
    Eq(t_0, t_1) -> Eq(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + fail)> t_0

  JavaParenthesize :
    Eq(t_0, t_1) -> Eq(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?Eq(_, _)
            + ?NotEq(_, _)
            + fail)> t_1

  JavaParenthesize :
    GtEq(t_0, t_1) -> GtEq(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + fail)> t_0

  JavaParenthesize :
    GtEq(t_0, t_1) -> GtEq(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + fail)> t_1

  JavaParenthesize :
    LtEq(t_0, t_1) -> LtEq(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + fail)> t_0

  JavaParenthesize :
    LtEq(t_0, t_1) -> LtEq(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?LtEq(_, _)
            + ?GtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + fail)> t_1

  JavaParenthesize :
    Gt(t_0, t_1) -> Gt(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + fail)> t_0

  JavaParenthesize :
    Gt(t_0, t_1) -> Gt(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?Gt(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Lt(_, _)
            + ?InstanceOf(_, _)
            + fail)> t_1

  JavaParenthesize :
    Lt(t_0, t_1) -> Lt(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + fail)> t_0

  JavaParenthesize :
    Lt(t_0, t_1) -> Lt(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?Lt(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?InstanceOf(_, _)
            + fail)> t_1

  JavaParenthesize :
    InstanceOf(t_0, t_1) -> InstanceOf(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + fail)> t_0

  JavaParenthesize :
    InstanceOf(t_0, t_1) -> InstanceOf(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + ?ExcOr(_, _)
            + ?And(_, _)
            + ?NotEq(_, _)
            + ?Eq(_, _)
            + ?GtEq(_, _)
            + ?LtEq(_, _)
            + ?Gt(_, _)
            + ?Lt(_, _)
            + fail)> t_1

  JavaParenthesize :
    LazyAnd(t_0, t_1) -> LazyAnd(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + fail)> t_0

  JavaParenthesize :
    LazyAnd(t_0, t_1) -> LazyAnd(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + fail)> t_1

  JavaParenthesize :
    Or(t_0, t_1) -> Or(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + fail)> t_0

  JavaParenthesize :
    Or(t_0, t_1) -> Or(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + ?LazyAnd(_, _)
            + ?Or(_, _)
            + fail)> t_1

  JavaParenthesize :
    LazyOr(t_0, t_1) -> LazyOr(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + fail)> t_0

  JavaParenthesize :
    LazyOr(t_0, t_1) -> LazyOr(t_0, Parenthetical(t_1))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + ?LazyOr(_, _)
            + fail)> t_1

  JavaParenthesize :
    Cond(t_0, t_1, t_2) -> Cond(Parenthetical(t_0), t_1, t_2)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + ?Cond(_, _, _)
            + fail)> t_0

  JavaParenthesize :
    Cond(t_0, t_1, t_2) -> Cond(t_0, Parenthetical(t_1), t_2)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_1

  JavaParenthesize :
    Cond(t_0, t_1, t_2) -> Cond(t_0, t_1, Parenthetical(t_2))
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_2

  JavaParenthesize :
    AssignOr(t_0, t_1) -> AssignOr(Parenthetical(t_0), t_1)
    where <(?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignExcOr(t_0, t_1) -> AssignExcOr(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignAnd(t_0, t_1) -> AssignAnd(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignURightShift(t_0, t_1) -> AssignURightShift(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignRightShift(t_0, t_1) -> AssignRightShift(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignLeftShift(t_0, t_1) -> AssignLeftShift(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignMinus(t_0, t_1) -> AssignMinus(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignPlus(t_0, t_1) -> AssignPlus(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignRemain(t_0, t_1) -> AssignRemain(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignDiv(t_0, t_1) -> AssignDiv(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignMul(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    AssignMul(t_0, t_1) -> AssignMul(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?Assign(_, _)
            + fail)> t_0

  JavaParenthesize :
    Assign(t_0, t_1) -> Assign(Parenthetical(t_0), t_1)
    where <(?AssignOr(_, _)
            + ?AssignExcOr(_, _)
            + ?AssignAnd(_, _)
            + ?AssignURightShift(_, _)
            + ?AssignRightShift(_, _)
            + ?AssignLeftShift(_, _)
            + ?AssignMinus(_, _)
            + ?AssignPlus(_, _)
            + ?AssignRemain(_, _)
            + ?AssignDiv(_, _)
            + ?AssignMul(_, _)
            + fail)> t_0


signature
  constructors
    Parenthetical : Unknown -> Unknown

