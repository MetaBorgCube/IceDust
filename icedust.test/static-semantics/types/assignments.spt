module types-assignments

language icedust

fixture [[
  module test
  [[...]]
]]


test error on assign attribute String to Int [[
  model
  entity X{
    i       : Int
    s       : String
  }
  
  data
  x : X {
    [[i="a"]]
    s="a"
  }
]] 1 error at #1

test error on assign attribute Int to String [[
  model
  entity X{
    i       : Int
    s       : String
  }
  
  data
  x : X {
    i=3
    [[s=4]]
  }
]] 1 error at #1

test error on assign role wrong entityType [[
  model
  entity Node{}
  relation Edge{
    Node.x 1 -> in
    Node.y * -> out
    out.in <-> in.out
  }
  
  data
  x : Node {}
  e : Edge {
    in=x
    [[out=e]]
  }
]] 1 error at #1

test error on derivation assign wrong Int to String [[
  model
  entity X{
    i : Int = [["a"]]
  }
]] 1 error at #1

test error on derivation assign wrong String to Int [[
  model
  entity X{
    i : Int = [["a"]]
  }
]] 1 error at #1


test error on derivation assign wrong ZeroOrOne to One [[
  model
  entity X{
    i : Int = [[j]]
    j : Int ?
  }
]] 1 error at #1

test no error on derivation assign One to One [[
  model
  entity X{
    i : Int = 4
  }
]] 0 errors

test error on derivation assign wrong ZeroOrMore to One [[
  model
  entity X{
    i : Int = [[(j ++ j)]]
    j : Int ?
  }
]] 1 error at #1

test error on derivation assign wrong OneOrMore to One [[
  model
  entity X{
    i : Int = [[(1 ++ 2)]]
  }
]] 1 error at #1

test no error on derivation assign One to ZeroOrOne [[
  model
  entity X{
    i : Int ? = 4
  }
]] 0 errors

test no error on derivation assign ZeroOrOne to ZeroOrOne [[
  model
  entity X{
    i : Int ?
    j : Int ? = i
  }
]] 0 errors

test error on derivation assign wrong ZeroOrMore to ZeroOrOne [[
  model
  entity X{
    i : Int ? = [[(j ++ j)]]
    j : Int ?
  }
]] 1 error at #1

test error on derivation assign wrong OneOrMore to ZeroOrOne [[
  model
  entity X{
    i : Int ? = [[(1 ++ 2)]]
  }
]] 1 error at #1

