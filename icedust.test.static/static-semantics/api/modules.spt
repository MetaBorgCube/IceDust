module api-moduls //modules creates a parse error

language icedust

fixture [[
  module [[...]]
  model
    entity Foo {
      i : Int ?
      a : Int = i <+ 0
    }
    entity Bar {}
    entity Baz {}
    relation Bar.baz <-> Baz.bar
  data
    foo:Foo{}
    bar:Bar{
      baz=baz{}
    }
  execute
    foo.a
    1+1
]]

test module entity names         [[test]] run modulename-get-entitynames-test         to !ATerm["Bar","Baz","Foo"]
test module entityinstance names [[test]] run modulename-get-entityinstancenames-test to !ATerm["bar","baz","foo"]
test module attribute names      [[test]] run modulename-get-attributenames-test      to !ATerm["a","i"]
//test module attribute names topo [[test]] run modulename-get-attributenames-topo-test to !ATerm[ ["i"],["a"] ] http://yellowgrass.org/issue/SPTWithCore/26
test module exprs                [[test]] run modulename-get-exprs-test               to !ATerm[MemberAccess(Ref("foo"),"a"),Addition(Int("1"),Int("1"))]
